{"version":3,"sources":["components/Pomodoro.jsx","App.js","index.js"],"names":["isTimerRunning","Pomodoro","props","sessionAudio","Audio","state","breakLength","sessionLength","time","intervalId","timerLabel","setBreakDuration","bind","setSessionDuration","formatTime","startStopTimer","resetClock","decrementTimer","phaseControl","skipPhase","toggleIcon","resetIcon","changeColor","playSound","switchTimer","this","currentTime","breakAudio","volume","play","pause","e","innerText","target","setState","minutes","Math","floor","seconds","clearInterval","setInterval","playIcon","document","getElementById","pauseIcon","style","display","body","background","id","className","onClick","src","alt","ref","audio","type","React","Component","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6722461b.chunk.js","sourcesContent":["import React from \"react\";\r\nlet isTimerRunning = false;\r\n\r\nclass Pomodoro extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      breakLength: 5,\r\n      sessionLength: 25,\r\n      time: 1500,\r\n      intervalId: \"\",\r\n      timerLabel: \"Focus\",\r\n    };\r\n    this.setBreakDuration = this.setBreakDuration.bind(this);\r\n    this.setSessionDuration = this.setSessionDuration.bind(this);\r\n    this.formatTime = this.formatTime.bind(this);\r\n    this.startStopTimer = this.startStopTimer.bind(this);\r\n    this.resetClock = this.resetClock.bind(this);\r\n    this.decrementTimer = this.decrementTimer.bind(this);\r\n    this.phaseControl = this.phaseControl.bind(this);\r\n    this.skipPhase = this.skipPhase.bind(this);\r\n    this.toggleIcon = this.toggleIcon.bind(this);\r\n    this.resetIcon = this.resetIcon.bind(this);\r\n    this.changeColor = this.changeColor.bind(this);\r\n    this.playSound = this.playSound.bind(this);\r\n    this.switchTimer = this.switchTimer.bind(this);\r\n  }\r\n\r\n  // FCC tests require the use of an HTML5 <audio> tag\r\n  // breakAudio = new Audio(\"sounds/rest-sound.mp3\");\r\n  sessionAudio = new Audio(\"sounds/focus-sound.mp3\");\r\n\r\n  playSound() {\r\n    const { timerLabel } = this.state;\r\n\r\n    this.sessionAudio.currentTime = 0;\r\n    this.breakAudio.currentTime = 0;\r\n    this.sessionAudio.volume = 0.5;\r\n    this.breakAudio.volume = 0.5;\r\n    if (timerLabel === \"Focus\") {\r\n      this.breakAudio.play();\r\n      this.sessionAudio.pause();\r\n    } else {\r\n      this.sessionAudio.play();\r\n      this.breakAudio.pause();\r\n    }\r\n  }\r\n\r\n  setBreakDuration(e) {\r\n    const { breakLength, timerLabel } = this.state;\r\n    const { innerText } = e.target;\r\n\r\n    if (!isTimerRunning) {\r\n      if (innerText === \"+\" && breakLength < 60) {\r\n        this.setState({\r\n          breakLength: breakLength + 1,\r\n        });\r\n      } else if (innerText === \"-\" && breakLength > 1) {\r\n        this.setState({\r\n          breakLength: breakLength - 1,\r\n        });\r\n      }\r\n      if (timerLabel === \"Rest\")\r\n        // setState callback prevents lagging one state behind\r\n        this.setState((state) => {\r\n          return { time: state.breakLength * 60 };\r\n        });\r\n    }\r\n  }\r\n\r\n  setSessionDuration(e) {\r\n    const { sessionLength, timerLabel } = this.state;\r\n    const { innerText } = e.target;\r\n\r\n    if (!isTimerRunning) {\r\n      if (innerText === \"+\" && sessionLength < 60) {\r\n        this.setState({\r\n          sessionLength: sessionLength + 1,\r\n        });\r\n      } else if (innerText === \"-\" && sessionLength > 1) {\r\n        this.setState({\r\n          sessionLength: sessionLength - 1,\r\n        });\r\n      }\r\n      if (timerLabel === \"Focus\") {\r\n        // setState callback prevents lagging one state behind\r\n        this.setState((state) => {\r\n          return { time: state.sessionLength * 60 };\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  formatTime() {\r\n    const { time } = this.state;\r\n    let minutes = Math.floor(time / 60);\r\n    let seconds = time - minutes * 60;\r\n\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n    return minutes + \":\" + seconds;\r\n  }\r\n\r\n  decrementTimer() {\r\n    const { time } = this.state;\r\n\r\n    this.setState({ time: time - 1 });\r\n  }\r\n\r\n  startStopTimer() {\r\n    const { intervalId } = this.state;\r\n\r\n    this.toggleIcon();\r\n    if (!intervalId) {\r\n      const intervalId = setInterval(() => {\r\n        this.decrementTimer();\r\n        this.phaseControl();\r\n      }, 1000);\r\n      this.setState({ intervalId });\r\n      isTimerRunning = true;\r\n    } else {\r\n      clearInterval(intervalId);\r\n      this.setState({ intervalId: \"\" });\r\n      isTimerRunning = false;\r\n    }\r\n  }\r\n\r\n  phaseControl() {\r\n    const { time } = this.state;\r\n\r\n    if (time < 0) {\r\n      this.playSound();\r\n      this.changeColor();\r\n      // FCC tests require the timer to continuously run instead of pausing\r\n      // this.resetIcon();\r\n      // clearInterval(intervalId);\r\n      // this.setState({\r\n      //   intervalId: \"\",\r\n      // });\r\n      this.switchTimer();\r\n    }\r\n  }\r\n\r\n  switchTimer() {\r\n    const { timerLabel } = this.state;\r\n\r\n    if (timerLabel === \"Focus\") {\r\n      this.setState((state) => {\r\n        return { time: state.breakLength * 60, timerLabel: \"Rest\" };\r\n      });\r\n    } else {\r\n      this.setState((state) => {\r\n        return { time: state.sessionLength * 60, timerLabel: \"Focus\" };\r\n      });\r\n    }\r\n  }\r\n\r\n  skipPhase() {\r\n    const { intervalId } = this.state;\r\n\r\n    this.playSound();\r\n    this.changeColor();\r\n    this.resetIcon();\r\n    this.switchTimer();\r\n    clearInterval(intervalId);\r\n    this.setState({\r\n      intervalId: \"\",\r\n    });\r\n    isTimerRunning = false;\r\n  }\r\n\r\n  toggleIcon() {\r\n    let playIcon = document.getElementById(\"play-icon\");\r\n    let pauseIcon = document.getElementById(\"pause-icon\");\r\n\r\n    if (playIcon.style.display === \"block\") {\r\n      playIcon.style.display = \"none\";\r\n      pauseIcon.style.display = \"block\";\r\n    } else {\r\n      playIcon.style.display = \"block\";\r\n      pauseIcon.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  resetIcon() {\r\n    let playIcon = document.getElementById(\"play-icon\");\r\n    let pauseIcon = document.getElementById(\"pause-icon\");\r\n\r\n    if (pauseIcon.style.display === \"block\") {\r\n      pauseIcon.style.display = \"none\";\r\n      playIcon.style.display = \"block\";\r\n    }\r\n  }\r\n\r\n  changeColor() {\r\n    const { timerLabel } = this.state;\r\n\r\n    if (timerLabel === \"Focus\") {\r\n      document.body.style.background = \"#0fbcf9\";\r\n      document.getElementById(\"timer\").style.background = \"#0fbcf9\";\r\n    } else {\r\n      document.body.style.background = \"#05c46b\";\r\n      document.getElementById(\"timer\").style.background = \"#05c46b\";\r\n    }\r\n  }\r\n\r\n  resetClock() {\r\n    const { intervalId } = this.state;\r\n\r\n    this.resetIcon();\r\n    clearInterval(intervalId);\r\n    this.setState({\r\n      breakLength: 5,\r\n      sessionLength: 25,\r\n      time: 1500,\r\n      timerLabel: \"Focus\",\r\n      intervalId: \"\",\r\n    });\r\n    isTimerRunning = false;\r\n    // Default color back to green on reset\r\n    document.body.style.background = \"#05c46b\";\r\n    document.getElementById(\"timer\").style.background = \"#05c46b\";\r\n    // FCC tests require audio to be paused and rewound on reset\r\n    this.sessionAudio.pause();\r\n    this.breakAudio.pause();\r\n    this.sessionAudio.currentTime = 0;\r\n    this.breakAudio.currentTime = 0;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <main>\r\n          <div id=\"pomodoro-timer\">\r\n            <section id=\"timer\">\r\n              <p id=\"timer-label\">{this.state.timerLabel}</p>\r\n              <div id=\"time-left\">{this.formatTime()}</div>\r\n            </section>\r\n\r\n            <section id=\"settings\">\r\n              <div className=\"break-settings\">\r\n                <p id=\"break-label\">Break</p>\r\n                <div className=\"dec-inc-container\">\r\n                  <button id=\"break-decrement\" onClick={this.setBreakDuration}>\r\n                    -\r\n                  </button>\r\n                  <p id=\"break-length\">{this.state.breakLength}</p>\r\n                  <button id=\"break-increment\" onClick={this.setBreakDuration}>\r\n                    +\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"session-settings\">\r\n                <p id=\"session-label\">Session</p>\r\n\r\n                <div className=\"dec-inc-container\">\r\n                  <button\r\n                    id=\"session-decrement\"\r\n                    onClick={this.setSessionDuration}\r\n                  >\r\n                    -\r\n                  </button>\r\n                  <p id=\"session-length\">{this.state.sessionLength}</p>\r\n                  <button\r\n                    id=\"session-increment\"\r\n                    onClick={this.setSessionDuration}\r\n                  >\r\n                    +\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <section id=\"controls\">\r\n              <button id=\"reset\" onClick={this.resetClock}>\r\n                <img\r\n                  id=\"reset-icon\"\r\n                  src=\"icons/reset-white.svg\"\r\n                  alt=\"reset icon\"\r\n                />\r\n              </button>\r\n\r\n              <button id=\"start_stop\" onClick={this.startStopTimer}>\r\n                <img\r\n                  style={{ display: \"block\" }}\r\n                  id=\"play-icon\"\r\n                  src=\"icons/play-white.svg\"\r\n                  alt=\"play icon\"\r\n                />\r\n                <img\r\n                  style={{ display: \"none\" }}\r\n                  id=\"pause-icon\"\r\n                  src=\"icons/pause-white.svg\"\r\n                  alt=\"pause icon\"\r\n                />\r\n              </button>\r\n\r\n              <button id=\"skip\" onClick={this.skipPhase}>\r\n                <img id=\"skip-icon\" src=\"icons/skip-next.svg\" alt=\"skip icon\" />\r\n              </button>\r\n            </section>\r\n\r\n            {/* HTML5 <audio> tag is necessary for FCC tests to pass */}\r\n            <audio\r\n              id=\"beep\"\r\n              ref={(audio) => {\r\n                this.breakAudio = audio;\r\n              }}\r\n              src=\"sounds/rest-sound.mp3\"\r\n              type=\"audio/mpeg\"\r\n            />\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pomodoro;\r\n","import \"./App.css\";\nimport Pomodoro from \"./components/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Pomodoro />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}